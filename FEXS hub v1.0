-- FEXS Hub with Infinite Jump + RGB Chams

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Helper: Create UI elements
local function create(name, parent, props)
    local obj = Instance.new(name)
    if parent then obj.Parent = parent end
    for prop, val in pairs(props or {}) do obj[prop] = val end
    return obj
end

-- Rainbow color generator
local function rainbowColor(t)
    local freq = 2
    local r = math.sin(freq * t + 0) * 127 + 128
    local g = math.sin(freq * t + 2) * 127 + 128
    local b = math.sin(freq * t + 4) * 127 + 128
    return Color3.fromRGB(r, g, b)
end

-- Create GUI
local gui = create("ScreenGui", player:WaitForChild("PlayerGui"), {
    Name = "FEXSHubGUI", ResetOnSpawn = false
})

-- Main Frame
local frame = create("Frame", gui, {
    Size = UDim2.new(0, 300, 0, 300),
    Position = UDim2.new(0.5, -150, 0.5, -150),
    BackgroundColor3 = Color3.fromRGB(20, 20, 20),
    Visible = false, Name = "MainFrame"
})
create("UICorner", frame, {CornerRadius = UDim.new(0, 10)})

-- Title Label
local title = create("TextLabel", frame, {
    Text = "FEXS hub",
    Font = Enum.Font.GothamBold,
    TextSize = 28,
    BackgroundTransparency = 1,
    TextColor3 = Color3.new(1, 1, 1),
    Size = UDim2.new(1, 0, 0, 50),
    Name = "Title"
})

-- Animate Rainbow Title
task.spawn(function()
    while true do
        local t = tick()
        title.TextColor3 = rainbowColor(t)
        task.wait(0.05)
    end
end)

-- Infinite Jump Toggle
local infiniteJumpEnabled = false
local infJumpButton = create("TextButton", frame, {
    Text = "Infinite Jump: OFF",
    Font = Enum.Font.Gotham,
    TextSize = 20,
    BackgroundColor3 = Color3.fromRGB(40, 40, 40),
    TextColor3 = Color3.new(1, 1, 1),
    Size = UDim2.new(0.8, 0, 0, 40),
    Position = UDim2.new(0.1, 0, 0, 60),
    Name = "InfJumpButton"
})
create("UICorner", infJumpButton, {CornerRadius = UDim.new(0, 6)})

infJumpButton.MouseButton1Click:Connect(function()
    infiniteJumpEnabled = not infiniteJumpEnabled
    infJumpButton.Text = "Infinite Jump: " .. (infiniteJumpEnabled and "ON" or "OFF")
end)

-- Infinite Jump Logic
UserInputService.JumpRequest:Connect(function()
    if infiniteJumpEnabled then
        local char = player.Character
        local humanoid = char and char:FindFirstChildWhichIsA("Humanoid")
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

-- RGB Chams Toggle
local chams
