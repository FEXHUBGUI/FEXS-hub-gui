-- // Orion UI Loader
local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()
local Window = OrionLib:MakeWindow({
    Name = "Universal Hub",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "UniversalHub"
})

-- // Values
local Player = game.Players.LocalPlayer
local Mouse = Player:GetMouse()
local UIS = game:GetService("UserInputService")
local SpeedEnabled = false
local FlyEnabled = false
local ESPEnabled = false

-- // Functions
local function Noclip(state)
    if state then
        Stepped = game:GetService("RunService").Stepped:Connect(function()
            for _,v in pairs(Player.Character:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false
                end
            end
        end)
    else
        if Stepped then Stepped:Disconnect() end
    end
end

local function Fly()
    local Character = Player.Character or Player.CharacterAdded:Wait()
    local HRP = Character:WaitForChild("HumanoidRootPart")
    local Humanoid = Character:WaitForChild("Humanoid")
    local BodyGyro = Instance.new("BodyGyro", HRP)
    local BodyVel = Instance.new("BodyVelocity", HRP)
    BodyGyro.P = 9e4 BodyGyro.MaxTorque = Vector3.new(9e9,9e9,9e9)
    BodyVel.Velocity = Vector3.new(0,0,0) BodyVel.MaxForce = Vector3.new(9e9,9e9,9e9)

    FlyEnabled = true
    while FlyEnabled do
        game:GetService("RunService").RenderStepped:Wait()
        local MoveDir = Humanoid.MoveDirection
        BodyVel.Velocity = Vector3.new(MoveDir.X*50, (UIS:IsKeyDown(Enum.KeyCode.Space) and 50) or (UIS:IsKeyDown(Enum.KeyCode.LeftControl) and -50) or 0, MoveDir.Z*50)
    end
    BodyGyro:Destroy() BodyVel:Destroy()
end

local function ToggleESP(state)
    ESPEnabled = state
    if ESPEnabled then
        for _,plr in pairs(game.Players:GetPlayers()) do
            if plr ~= Player and plr.Character and plr.Character:FindFirstChild("Head") then
                local Billboard = Instance.new("BillboardGui", plr.Character.Head)
                Billboard.Name = "ESPTag"
                Billboard.Size = UDim2.new(0,200,0,50)
                Billboard.AlwaysOnTop = true
                Billboard.StudsOffset = Vector3.new(0,2,0)
                local Label = Instance.new("TextLabel", Billboard)
                Label.Size = UDim2.new(1,0,1,0)
                Label.BackgroundTransparency = 1
                Label.Text = plr.Name
                Label.TextColor3 = Color3.new(1,0,0)
                Label.TextScaled = true
            end
        end
    else
        for _,plr in pairs(game.Players:GetPlayers()) do
            if plr.Character and plr.Character:FindFirstChild("Head") then
                if plr.Character.Head:FindFirstChild("ESPTag") then
                    plr.Character.Head.ESPTag:Destroy()
                end
            end
        end
    end
end

-- // Tabs
local MainTab = Window:MakeTab({Name = "Main", Icon = "rbxassetid://4483345998"})
local PlayerTab = Window:MakeTab({Name = "Player", Icon = "rbxassetid://4483345998"})
local VisualsTab = Window:MakeTab({Name = "Visuals", Icon = "rbxassetid://4483345998"})

-- // Main
MainTab:AddButton({
    Name = "Rejoin Game",
    Callback = function()
        game:GetService("TeleportService"):Teleport(game.PlaceId, Player)
    end
})

MainTab:AddButton({
    Name = "Server Hop",
    Callback = function()
        local Http = game:GetService("HttpService")
        local TPS = game:GetService("TeleportService")
        local Servers = Http:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
        for _,s in pairs(Servers.data) do
            if s.playing < s.maxPlayers then
                TPS:TeleportToPlaceInstance(game.PlaceId, s.id, Player)
                break
            end
        end
    end
})

-- // Player
PlayerTab:AddToggle({
    Name = "Noclip",
    Default = false,
    Callback = function(Value) Noclip(Value) end
})

PlayerTab:AddButton({
    Name = "Fly (Toggle)",
    Callback = function()
        FlyEnabled = not FlyEnabled
        if FlyEnabled then Fly() end
    end
})

PlayerTab:AddSlider({
    Name = "WalkSpeed",
    Min = 16,
    Max = 200,
    Default = 16,
    Callback = function(Value)
        Player.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = Value
    end
})

PlayerTab:AddSlider({
    Name = "JumpPower",
    Min = 50,
    Max = 300,
    Default = 50,
    Callback = function(Value)
        Player.Character:FindFirstChildOfClass("Humanoid").JumpPower = Value
    end
})

-- // Visuals
VisualsTab:AddToggle({
    Name = "ESP",
    Default = false,
    Callback = function(Value) ToggleESP(Value) end
})

-- // Init
OrionLib:Init()
