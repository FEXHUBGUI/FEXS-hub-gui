local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local CoreGui = game:GetService("CoreGui")

-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "FEXSGUIHub"
ScreenGui.Parent = PlayerGui
ScreenGui.ResetOnSpawn = false

-- Main Frame (Draggable)
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 320, 0, 320) -- bigger to fit tabs
MainFrame.Position = UDim2.new(0.5, -160, 0.3, -160)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Visible = true

-- Rainbow background setup
local hue = 0
RunService.RenderStepped:Connect(function(dt)
	hue = (hue + dt * 0.2) % 1
	MainFrame.BackgroundColor3 = Color3.fromHSV(hue, 0.8, 0.9)
end)

-- Title bar
local TitleBar = Instance.new("TextLabel")
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
TitleBar.BorderSizePixel = 0
TitleBar.Text = "FEXS GUI Hub"
TitleBar.TextColor3 = Color3.new(1,1,1)
TitleBar.Font = Enum.Font.SourceSansBold
TitleBar.TextSize = 22
TitleBar.Parent = MainFrame

-- Close Button
local CloseBtn = Instance.new("TextButton")
CloseBtn.Size = UDim2.new(0, 40, 0, 30)
CloseBtn.Position = UDim2.new(1, -40, 0, 0)
CloseBtn.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
CloseBtn.Text = "X"
CloseBtn.TextColor3 = Color3.new(1,1,1)
CloseBtn.Font = Enum.Font.SourceSansBold
CloseBtn.TextSize = 20
CloseBtn.Parent = MainFrame

-- Open Button
local OpenBtn = Instance.new("TextButton")
OpenBtn.Size = UDim2.new(0, 120, 0, 30)
OpenBtn.Position = UDim2.new(0, 10, 0.5, -15)
OpenBtn.BackgroundColor3 = Color3.fromRGB(35,35,35)
OpenBtn.BorderSizePixel = 0
OpenBtn.Text = "Open FEXS GUI"
OpenBtn.TextColor3 = Color3.new(1,1,1)
OpenBtn.Font = Enum.Font.SourceSansBold
OpenBtn.TextSize = 18
OpenBtn.Visible = false
OpenBtn.Parent = ScreenGui

-- Open/Close functionality
CloseBtn.MouseButton1Click:Connect(function()
	MainFrame.Visible = false
	OpenBtn.Visible = true
end)

OpenBtn.MouseButton1Click:Connect(function()
	MainFrame.Visible = true
	OpenBtn.Visible = false
end)

-- Create Tabs container
local TabsContainer = Instance.new("Frame")
TabsContainer.Size = UDim2.new(1, 0, 1, -30)
TabsContainer.Position = UDim2.new(0, 0, 0, 30)
TabsContainer.BackgroundTransparency = 1
TabsContainer.Parent = MainFrame

-- Create Tab Buttons
local TabButtonsFrame = Instance.new("Frame")
TabButtonsFrame.Size = UDim2.new(1, 0, 0, 30)
TabButtonsFrame.BackgroundColor3 = Color3.fromRGB(20,20,20)
TabButtonsFrame.Parent = MainFrame

local function createTabButton(name, position)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0, 150, 1, 0)
	btn.Position = position
	btn.BackgroundColor3 = Color3.fromRGB(40,40,40)
	btn.TextColor3 = Color3.new(1,1,1)
	btn.Font = Enum.Font.SourceSansBold
	btn.TextSize = 18
	btn.Text = name
	btn.Parent = TabButtonsFrame
	return btn
end

local MainTabBtn = createTabButton("Main", UDim2.new(0, 0, 0, 0))
local SettingsTabBtn = createTabButton("Settings", UDim2.new(0, 150, 0, 0))

-- Create Main Tab Frame
local MainTab = Instance.new("Frame")
MainTab.Size = UDim2.new(1, 0, 1, 0)
MainTab.BackgroundTransparency = 1
MainTab.Parent = TabsContainer

-- Create Settings Tab Frame
local SettingsTab = Instance.new("Frame")
SettingsTab.Size = UDim2.new(1, 0, 1, 0)
SettingsTab.BackgroundTransparency = 1
SettingsTab.Visible = false
SettingsTab.Parent = TabsContainer

-- Switch Tabs function
local function switchTab(tab)
	if tab == "Main" then
		MainTab.Visible = true
		SettingsTab.Visible = false
		MainTabBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		SettingsTabBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	else
		MainTab.Visible = false
		SettingsTab.Visible = true
		MainTabBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		SettingsTabBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	end
end

-- Initialize tabs
switchTab("Main")

MainTabBtn.MouseButton1Click:Connect(function()
	switchTab("Main")
end)

SettingsTabBtn.MouseButton1Click:Connect(function()
	switchTab("Settings")
end)

-- MAIN TAB ELEMENTS (Speed, ESP, Chams, Crosshair Buttons)
local function createButton(text, position, parent)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0, 280, 0, 45)
	btn.Position = position
	btn.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
	btn.BorderSizePixel = 0
	btn.TextColor3 = Color3.new(1,1,1)
	btn.Font = Enum.Font.SourceSans
	btn.TextSize = 20
	btn.Text = text
	btn.Parent = parent
	return btn
end

local SpeedBtn = createButton("Speed: Normal", UDim2.new(0, 20, 0, 20), MainTab)
local ESPBtn = createButton("ESP: OFF", UDim2.new(0, 20, 0, 75), MainTab)
local CrosshairBtn = createButton("Crosshair: OFF", UDim2.new(0, 20, 0, 130), MainTab)
local ChamsBtn = createButton("Chams: OFF", UDim2.new(0, 20, 0, 185), MainTab)

-- SETTINGS TAB ELEMENTS
local function createToggle(name, position, parent)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 280, 0, 40)
	frame.Position = position
	frame.BackgroundTransparency = 1
	frame.Parent = parent
	
	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(0.7, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.Text = name
	label.TextColor3 = Color3.new(1,1,1)
	label.Font = Enum.Font.SourceSans
	label.TextSize = 20
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = frame
	
	local toggleBtn = Instance.new("TextButton")
	toggleBtn.Size = UDim2.new(0.3, -10, 0.8, 0)
	toggleBtn.Position = UDim2.new(0.7, 10, 0.1, 0)
	toggleBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	toggleBtn.TextColor3 = Color3.new(1,1,1)
	toggleBtn.Font = Enum.Font.SourceSansBold
	toggleBtn.TextSize = 18
	toggleBtn.Text = "OFF"
	toggleBtn.Parent = frame
	
	return toggleBtn
end

local BoxesToggle = createToggle("ESP Boxes", UDim2.new(0, 20, 0, 20), SettingsTab)
local HealthBarToggle = createToggle("Health Bars", UDim2.new(0, 20, 0, 70), SettingsTab)
local TracersToggle = createToggle("ESP Tracers", UDim2.new(0, 20, 0, 120), SettingsTab)

-- Speed Button Logic (unchanged)
local speeds = {"Normal", "Fast", "Very Fast"}
local speedValues = { Normal = 16, Fast = 40, ["Very Fast"] = 80 }
local currentSpeedIndex = 1

local function updateSpeed()
	local speedName = speeds[currentSpeedIndex]
	SpeedBtn.Text = "Speed: " .. speedName
	local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	if humanoid then
		humanoid.WalkSpeed = speedValues[speedName]
	end
end

SpeedBtn.MouseButton1Click:Connect(function()
	currentSpeedIndex = currentSpeedIndex + 1
	if currentSpeedIndex > #speeds then
		currentSpeedIndex = 1
	end
	updateSpeed()
end)

updateSpeed()

-- ESP Feature toggles storage
local espSettings = {
	boxes = false,
	healthBars = false,
	tracers = false,
}

-- ESP Tables
local espBoxes = {}
local espHealthBars = {}
local espTracers = {}

-- Function to create tracer line
local function createTracer(player)
	if espTracers[player] then return end
	local tracer = Instance.new("Frame")
	tracer.Name = "Tracer"
	tracer.BackgroundColor3 = Color3.new(1, 0, 0)
	tracer.BorderSizePixel = 0
	tracer.ZIndex = 5
	tracer.AnchorPoint = Vector2.new(0.5, 0)
	tracer.Size = UDim2.new(0, 2, 0, 0) -- initial size 0 height
	tracer.Position = UDim2.new(0.5, 0, 1, 0) -- start from bottom center (screen bottom)
	tracer.Parent = CoreGui
	espTracers[player] = tracer
end

local function removeTracer(player)
	if espTracers[player] then
		espTracers[player]:Destroy()
		espTracers[player] = nil
	end
end

-- Update tracer size and position every frame
local function updateTracer(player)
	local tracer = espTracers[player]
	local char = player.Character
	if not tracer or not char then
		removeTracer(player)
		return
	end
	local root = char:FindFirstChild("HumanoidRootPart")
	if not root then
		removeTracer(player)
		return
	end

	local camera = workspace.CurrentCamera
	local rootPos, onScreen = camera:WorldToViewportPoint(root.Position)
	if onScreen then
		local screenCenterX = camera.ViewportSize.X / 2
		local screenCenterY = camera.ViewportSize.Y
		local tracerHeight = (screenCenterY - rootPos.Y)
		tracer.Size = UDim2.new(0, 2, 0, tracerHeight)
		tracer.Position = UDim2.new(0, rootPos.X, 0, rootPos.Y)
		tracer.Visible = true
	else
		tracer.Visible = false
	end
end

-- Example ESP toggles logic (simplified for demo)
local function toggleESP(enabled)
	if enabled then
		-- Create tracers for players if espSettings.tracers is true
		for _, player in pairs(Players:GetPlayers()) do
			if player ~= LocalPlayer and player.Character then
				if espSettings.tracers then
					createTracer(player)
				end
			end
		end
	else
		-- Remove all ESP visuals
		for player, _ in pairs(espTracers) do
			removeTracer(player)
		end
	end
end

-- Update toggle button display and espSettings on click
local function toggleSetting(settingName, toggleBtn)
	toggleBtn.MouseButton1Click:Connect(function()
		espSettings[settingName] = not espSettings[settingName]
		if espSettings[settingName] then
			toggleBtn.Text = "ON"
			toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
		else
			toggleBtn.Text = "OFF"
			toggleBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
		end

		-- Update ESP visuals live when toggles change
		if settingName == "tracers" then
			if espSettings.tracers then
				for _, player in pairs(Players:GetPlayers()) do
					if player ~= LocalPlayer and player.Character then
						createTracer(player)
					end
				end
			else
				for player, _ in pairs(espTracers) do
					removeTracer(player)
				end
			end
		end

		-- Add your logic for boxes and health bars here similarly if needed

		-- Update main ESP button text depending on if any ESP setting is enabled
		local anyESP = espSettings.boxes or espSettings.healthBars or espSettings.tracers
		ESPBtn.Text = "ESP: " .. (anyESP and "ON" or "OFF")
	end)
end

toggleSetting("boxes", BoxesToggle)
toggleSetting("healthBars", HealthBarToggle)
toggleSetting("tracers", TracersToggle)

-- Initial colors for toggles
BoxesToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
HealthBarToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
TracersToggle.BackgroundColor3 = Color3.fromRGB(70, 70, 70)

-- ESP Button toggles all ESP on/off for quick toggle (toggles all settings together)
ESPBtn.MouseButton1Click:Connect(function()
	local newState = not (espSettings.boxes or espSettings.healthBars or espSettings.tracers)
	espSettings.boxes = newState
	espSettings.healthBars = newState
	espSettings.tracers = newState

	-- Update toggles UI
	BoxesToggle.Text = newState and "ON" or "OFF"
	BoxesToggle.BackgroundColor3 = newState and Color3.fromRGB(50, 150, 50) or Color3.fromRGB(70, 70, 70)
	HealthBarToggle.Text = newState and "ON" or "OFF"
	HealthBarToggle.BackgroundColor3 = newState and Color3.fromRGB(50, 150, 50) or Color3.fromRGB(70, 70, 70)
	TracersToggle.Text = newState and "ON" or "OFF"
	TracersToggle.BackgroundColor3 = newState and Color3.fromRGB(50, 150, 50) or Color3.fromRGB(70, 70, 70)

	-- Apply tracer toggles live
	if newState then
		for _, player in pairs(Players:GetPlayers()) do
			if player ~= LocalPlayer and player.Character then
				createTracer(player)
			end
		end
	else
		for player, _ in pairs(espTracers) do
			removeTracer(player)
		end
	end

	ESPBtn.Text = "ESP: " .. (newState and "ON" or "OFF")
end)

-- Update tracers on render step if enabled
RunService.RenderStepped:Connect(function()
	if espSettings.tracers then
		for player, tracer in pairs(espTracers) do
			updateTracer(player)
		end
	end
end)
